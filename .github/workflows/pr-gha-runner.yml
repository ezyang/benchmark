name: TorchBench PR Test
on:
  pull_request:
  workflow_dispatch:
  push:
    branches:
      - main

env:
  CONDA_ENV: "pr-test"
  SETUP_INSTANCE_SCRIPT: "/workspace/setup_instance.sh"

jobs:
  pr-test:
    runs-on: [self-hosted, a100-runner]
    timeout-minutes: 1440 # 24 hours
    steps:
      - name: Checkout TorchBench
        uses: actions/checkout@v3
      - name: GPU Tuning
        run: |
          . "${SETUP_INSTANCE_SCRIPT}"
          sudo LD_LIBRARY_PATH=/usr/local/nvidia/lib64:$LD_LIBRARY_PATH nvidia-smi -pm 1
          sudo LD_LIBRARY_PATH=/usr/local/nvidia/lib64:$LD_LIBRARY_PATH nvidia-smi -ac 1215,1410
          nvidia-smi
      - name: "[FB EMPLOYEES] Enable SSH (Click me for login details)"
        uses: seemethere/add-github-ssh-key@v1
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Setup Conda Env
        run: |
          . "${SETUP_INSTANCE_SCRIPT}"
          python utils/python_utils.py --create-conda-env "${CONDA_ENV}"
          conda activate "${CONDA_ENV}"
          sudo python utils/cuda_utils.py --setup-cuda-softlink
          python utils/cuda_utils.py --install-torch-deps
      - name: Install PyTorch nightly
        run: |
          . "${SETUP_INSTANCE_SCRIPT}"
          conda activate "${CONDA_ENV}"
          python utils/cuda_utils.py --install-torch-nightly
      - name: Install TorchBench
        run: |
          . "${SETUP_INSTANCE_SCRIPT}"
          conda activate "${CONDA_ENV}"
          python install.py
      - name: Validate benchmark components (Worker)
        run: |
          . "${SETUP_INSTANCE_SCRIPT}"
          conda activate "${CONDA_ENV}"
          python -m components.test.test_subprocess
          python -m components.test.test_worker
      - name: Validate benchmark components (Model)
        run: |
          . "${SETUP_INSTANCE_SCRIPT}"
          conda activate "${CONDA_ENV}"
          python test.py
      - name: Hold runner for 2 hours or until ssh sessions have drained
        # Always hold for active ssh sessions
        if: always()
        run: .github/scripts/wait_for_ssh_to_drain.sh
      - name: Remove conda environment
        if: always()
        run: |
          . "${SETUP_INSTANCE_SCRIPT}"
          conda env remove --name "${CONDA_ENV}" || true
          rm -f ~/.ssh/authorized_keys

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}-${{ github.event_name == 'workflow_dispatch' }}
  cancel-in-progress: true
